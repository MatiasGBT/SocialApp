{"ast":null,"code":"/*!\n * Cropper.js v1.5.12\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2021-06-12T08:00:17.411Z\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Cropper = factory());\n})(this, function () {\n  'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: MIN_CONTAINER_WIDTH,\n    minContainerHeight: MIN_CONTAINER_HEIGHT,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n        toArray(data).forEach(function (value, key) {\n          callback.call(data, value, key, data);\n        });\n      } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n\n    var maxRatio = 0;\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n\n        if (Math.abs(ratio) > Math.abs(maxRatio)) {\n          maxRatio = ratio;\n        }\n      });\n    });\n    return maxRatio;\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n            // 8 is the offset of the current tag's value\n            _offset += 8; // Get the original orientation value\n\n            orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      var minWidth = Number(options.minContainerWidth);\n      var minHeight = Number(options.minContainerHeight);\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH),\n        height: Math.max(container.offsetHeight, minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      canvasData.left = (containerData.width - canvasData.width) / 2;\n      canvasData.top = (containerData.height - canvasData.height) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var ratioX = container.offsetWidth / containerData.width;\n      var ratioY = container.offsetHeight / containerData.height;\n      var ratio = Math.abs(ratioX - 1) > Math.abs(ratioY - 1) ? ratioX : ratioY; // Resize when width changed or height changed\n\n      if (ratio !== 1) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"https://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        } // The third parameter is required for avoiding side-effect (#682)\n\n\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.initialImageData = assign({}, _this2.imageData);\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n  return Cropper;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","Cropper","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","value","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","from","o","minLen","n","toString","call","slice","name","test","len","arr2","IS_BROWSER","window","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","MIN_CONTAINER_WIDTH","MIN_CONTAINER_HEIGHT","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","TEMPLATE","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","hasClass","classList","contains","className","indexOf","addClass","elem","add","trim","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","maxRatio","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","ratio","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","scale","drawImage","map","param","floor","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","parseOrientation","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","limited","limitCanvas","oldLeft","oldTop","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","ratioX","ratioY","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","x","y","check","side","move","p","methods","reset","initialImageData","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","sourceWidth","sourceHeight","srcX","srcY","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","setAspectRatio","mode","croppable","AnotherCropper","tagName","Error","reloading","sizing","init","toDataURL","clone","read","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","noConflict","setDefaults"],"sources":["C:/Users/BELTARiT/Desktop/SocialApp/SocialApp_frontend/node_modules/cropperjs/dist/cropper.js"],"sourcesContent":["/*!\n * Cropper.js v1.5.12\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2021-06-12T08:00:17.411Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Cropper = factory());\n}(this, (function () { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: MIN_CONTAINER_WIDTH,\n    minContainerHeight: MIN_CONTAINER_HEIGHT,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n\n    var maxRatio = 0;\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n\n        if (Math.abs(ratio) > Math.abs(maxRatio)) {\n          maxRatio = ratio;\n        }\n      });\n    });\n    return maxRatio;\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      var minWidth = Number(options.minContainerWidth);\n      var minHeight = Number(options.minContainerHeight);\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH),\n        height: Math.max(container.offsetHeight, minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      canvasData.left = (containerData.width - canvasData.width) / 2;\n      canvasData.top = (containerData.height - canvasData.height) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var ratioX = container.offsetWidth / containerData.width;\n      var ratioY = container.offsetHeight / containerData.height;\n      var ratio = Math.abs(ratioX - 1) > Math.abs(ratioY - 1) ? ratioX : ratioY; // Resize when width changed or height changed\n\n      if (ratio !== 1) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"https://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        } // The third parameter is required for avoiding side-effect (#682)\n\n\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.initialImageData = assign({}, _this2.imageData);\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}